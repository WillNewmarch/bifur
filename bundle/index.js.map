{"version":3,"file":"index.js","mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;;UCVA;UACA;;;;;WCDA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;;;;;;;;ACAA;AACe;AACf;AACA;AACA,sBAAsB,QAAQ;AAC9B,mBAAmB,UAAU;AAC7B,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,UAAU;AAC7B,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA,kCAAkC,eAAe;AACjD,mCAAmC,mBAAmB;AACtD;AACA;AACA;AACA;AACA;AACA,mBAAmB,UAAU;AAC7B,iBAAiB,MAAM;AACvB;AACA;AACA;AACA,yCAAyC,gCAAgC;AACzE;AACA;AACA;;ACrCA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AClBA,4CAAe,cAAc,EAAE,UAAU,EAAE,eAAe,EAAE,gBAAgB,EAAE,UAAU,GAAG,yCAAyC;;ACArG;;AAE/B;AACA,qCAAqC,UAAU;AAC/C;;AAEA,2DAAe,QAAQ;;ACNc;AACrC;AACA;AACA;AACA;;AAEA;;AAEA,gBAAgB,SAAS;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA,0gBAA0gB;AAC1gB;AACA;AACA;AACA;;AAEA,OAAO,oBAAQ;AACf;AACA;;AAEA;AACA;;AAEA,4DAAe,SAAS;;AC7BG;AACY;;AAEvC;AACA;AACA,+CAA+C,GAAG,KAAK;;AAEvD;AACA,mCAAmC;;AAEnC;AACA;;AAEA,oBAAoB,QAAQ;AAC5B;AACA;;AAEA;AACA;;AAEA,SAAS,qBAAS;AAClB;;AAEA,qDAAe,EAAE;;ACvBiB;AAClC;AACe;AACf;AACA;AACA,sBAAsB,QAAQ;AAC9B,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;AACA,kCAAkC,cAAI;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,kBAAkB;AACvD,aAAa;AACb;AACA;AACA;AACA;;AC5BuC;AACA;AACvC;AACe;AACf;AACA;AACA,mBAAmB,UAAU;AAC7B,oBAAoB,OAAO;AAC3B,iBAAiB,SAAS;AAC1B;AACA;AACA,uBAAuB,aAAa;AACpC,wBAAwB,YAAY;AACpC;AACA;AACA;AACA,iC","sources":["webpack://Bifur/webpack/universalModuleDefinition","webpack://Bifur/webpack/bootstrap","webpack://Bifur/webpack/runtime/define property getters","webpack://Bifur/webpack/runtime/hasOwnProperty shorthand","webpack://Bifur/./dist/Worker/Builder.js","webpack://Bifur/./node_modules/uuid/dist/esm-browser/rng.js","webpack://Bifur/./node_modules/uuid/dist/esm-browser/regex.js","webpack://Bifur/./node_modules/uuid/dist/esm-browser/validate.js","webpack://Bifur/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://Bifur/./node_modules/uuid/dist/esm-browser/v4.js","webpack://Bifur/./dist/Worker/Wrapper.js","webpack://Bifur/./dist/Bifur.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Bifur\"] = factory();\n\telse\n\t\troot[\"Bifur\"] = factory();\n})(self, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","/** Class used for building Worker instances. */\nexport default class Builder {\n    /**\n     * Build an instance of Worker containing function supplied.\n     * @param window {Window} The relative Window object.\n     * @param fnc {Function} Function to run inside the Worker.\n     * @returns {Worker} The Worker instance.\n     */\n    static build(window, fnc) {\n        const blob = Builder.generateBlob(fnc);\n        const blobUrl = window.URL.createObjectURL(blob);\n        return new Worker(blobUrl);\n    }\n    /**\n     * Compose the content intended for the Worker's Blob.\n     * @param fnc {Function} The function to be run inside the Worker.\n     * @returns {string} The intended content for a Blob.\n     */\n    static generateBlobContent(fnc) {\n        return `\n            self.onmessage = function(m) {\n                const requestId = m.data.requestId;\n                const output = (${fnc.toString()})(...m.data.input); \n                self.postMessage({ requestId, output });\n            };\n        `;\n    }\n    /**\n     * Generate a Blob in order to construct the Worker.\n     * @param fnc {Function} The function to be run inside the Worker.\n     * @returns {Blob} The Blob used to construct the Worker.\n     */\n    static generateBlob(fnc) {\n        const blobContent = Builder.generateBlobContent(fnc);\n        return new Blob([blobContent], { type: 'application/javascript' });\n    }\n}\n//# sourceMappingURL=Builder.js.map","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import { v4 as uuid } from 'uuid';\n/** Class used to create a wrapper function for a Worker. */\nexport default class Wrapper {\n    /**\n     * Wrap a Worker into a function returning a Promise, resolving when the Worker has responded.\n     * @param worker {Worker} The worker to be wrapped.\n     * @returns {Function} A function that returns a Promise, resolving when the Worker responds.\n     */\n    static wrap(worker) {\n        return (input) => {\n            return new Promise((resolve, reject) => {\n                const requestId = uuid();\n                worker.onmessage = (event) => {\n                    if (event.data.requestId === requestId) {\n                        resolve(event.data.output);\n                    }\n                };\n                worker.onmessageerror = (event) => {\n                    reject(event);\n                };\n                worker.onerror = (event) => {\n                    reject(event);\n                };\n                worker.postMessage({ requestId, input });\n            });\n        };\n    }\n}\n//# sourceMappingURL=Wrapper.js.map","import Builder from \"./Worker/Builder\";\nimport Wrapper from \"./Worker/Wrapper\";\n/** Class allowing asynchronous functionality via a Worker. */\nexport default class Bifur {\n    /**\n     * Run the supplied function with the supplied arguments asynchronously.\n     * @param fnc {Function} The function to be run asynchronously.\n     * @param args {Array} The arguments to pass to the function.\n     * @returns {Promise} The promise that resolves once the function has completed.\n     */\n    static run(fnc, args) {\n        const worker = Builder.build(window, fnc);\n        const wrapper = Wrapper.wrap(worker);\n        return wrapper(args);\n    }\n}\n//# sourceMappingURL=Bifur.js.map"],"names":[],"sourceRoot":""}