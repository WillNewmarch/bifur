{"version":3,"file":"index.js","mappings":"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","sources":["webpack://Bifur/webpack/universalModuleDefinition","webpack://Bifur/webpack/bootstrap","webpack://Bifur/webpack/runtime/define property getters","webpack://Bifur/webpack/runtime/hasOwnProperty shorthand","webpack://Bifur/./src/Worker/Builder.ts","webpack://Bifur/./src/Helpers/generateUUID.ts","webpack://Bifur/./src/Worker/PersistentWrapper.ts","webpack://Bifur/./src/Worker/Wrapper.ts","webpack://Bifur/./src/Bifur.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Bifur\"] = factory();\n\telse\n\t\troot[\"Bifur\"] = factory();\n})(self, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","/** Class used for building Worker instances. */\nexport default class Builder {\n    /**\n     * Build an instance of Worker containing function supplied.\n     * @param window {Window} The relative Window object.\n     * @param fnc {Function} Function to run inside the Worker.\n     * @returns {Worker} The Worker instance.\n     */\n    static build(window, fnc: Function): Worker {\n        const blob = Builder.generateBlob(fnc);\n        const blobUrl = window.URL.createObjectURL(blob);\n        return new Worker(blobUrl);\n    }\n    \n    /**\n     * Compose the content intended for the Worker's Blob.\n     * @param fnc {Function} The function to be run inside the Worker.\n     * @returns {string} The intended content for a Blob.\n     */    \n    static generateBlobContent(fnc: Function): string {\n        return `\n            self.onmessage = function(m) {\n                const requestId = m.data.requestId;\n                const output = (${fnc.toString()})(...m.data.input); \n                self.postMessage({ requestId, output });\n            };\n        `;\n    }\n\n    /**\n     * Generate a Blob in order to construct the Worker.\n     * @param fnc {Function} The function to be run inside the Worker.\n     * @returns {Blob} The Blob used to construct the Worker.\n     */\n    static generateBlob(fnc: Function): Blob {\n        const blobContent: string = Builder.generateBlobContent(fnc);\n        return new Blob([ blobContent ], { type: 'application/javascript' }); \n    }\n}","/**\n * Generates a UUID.\n * @returns {string} a uuid.\n */\nexport default function generateUUID() {\n    let d = new Date().getTime();\n    let d2 = (performance && performance.now && (performance.now() * 1000)) || 0;\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n        let r = Math.random() * 16;\n        if (d > 0) {\n            r = (d + r) % 16 | 0;\n            d = Math.floor(d / 16);\n        } else {\n            r = (d2 + r) % 16 | 0;\n            d2 = Math.floor(d2 / 16);\n        }\n        return (c == 'x' ? r : (r & 0x7 | 0x8)).toString(16);\n    });\n};\n","import generateUUID from '../Helpers/generateUUID.js';\n\n// A request has a unique ID, a resolve function, and a reject function.\ninterface Request {\n    requestId: string;\n    resolve: Function;\n    reject: Function;\n}\n\n/** Class used to create a persistent wrapper function for a Worker. */\nexport default class PersistentWrapper {\n    // The worker within the persistent wrapper.\n    worker: Worker;\n\n    // Array of requests currently being processed by the worker.\n    requests: Request[];\n\n    constructor(worker: Worker) {\n        this.requests = [];\n        this.worker = worker;\n        this.worker.onmessage = e => this.resolveRequest(e);\n        this.worker.onmessageerror = e => this.rejectRequest(e);\n        this.worker.onerror = e => this.rejectRequest(e);\n    }\n\n    /**\n     * Get the request respective of the response from the worker.\n     * @param event the MessageEvent from the worker.\n     * @returns {Request}\n     */\n    getRequest(event: MessageEvent): Request {\n        const request = this.requests.find(r => event.data.requestId === r.requestId);\n        if(request) {\n            const requestIndex = this.requests.indexOf(request);\n            this.requests.splice(requestIndex,1);\n            return request;\n        }\n        console.error('Could not find request:', event.data.requestId, event);\n    }\n\n    /**\n     * Run the respective request's resolve function\n     * and pass it the data returned from the worker.\n     * @param event the MessageEvent from the worker.\n     */\n    resolveRequest(event: MessageEvent) {\n        const request = this.getRequest(event);\n        request.resolve(event.data.output);\n    }\n\n    /**\n     * Run the respective request's reject function\n     * and pass it the event from the worker.\n     * @param event the MessageEvent from the worker.\n     */\n    rejectRequest(event) {\n        const request = this.getRequest(event);\n        request.reject(event);\n    }\n\n    /**\n     * Runs the worker function and returns a promise to await for results.\n     * @param input an array of arguments intended for the worker function.\n     * @returns {Promise} that resolves (or rejects) when the function completes.\n     */\n    run(input: Array<any>) {\n        const requestId: string = generateUUID();\n        return new Promise((resolve, reject) => {\n            this.requests.push({\n                requestId,\n                resolve,\n                reject\n            });\n            this.worker.postMessage({ requestId, input });\n        });\n    }\n\n    /**\n     * Teardown the PersistentWorker, terminating the worker and \n     * removing any references to the previous requests.\n     */\n    teardown() {\n        this.worker.terminate();\n        this.requests = [];\n    }\n}","import generateUUID from '../Helpers/generateUUID.js';\n\n/** Class used to create a wrapper function for a Worker. */\nexport default class Wrapper {\n    /**\n     * Wrap a Worker into a function returning a Promise, resolving when the Worker has responded.\n     * @param worker {Worker} The worker to be wrapped.\n     * @returns {Function} A function that returns a Promise, resolving when the Worker responds.\n     */\n    static wrap(worker: Worker): Function {\n        return (input : Array<any>) => {\n            return new Promise((resolve,reject) => {\n                const requestId: string = generateUUID();\n                worker.onmessage = (event) => {\n                    if(event.data.requestId === requestId) {\n                        resolve(event.data.output);\n                        worker.terminate();\n                    }\n                };\n                worker.onmessageerror = (event) => {\n                    reject(event);\n                    worker.terminate();\n                };\n                worker.onerror = (event) => {\n                    reject(event);\n                    worker.terminate();\n                };\n                worker.postMessage({ requestId, input });\n            });\n        }\n    }\n}","import Builder from \"./Worker/Builder.js\";\nimport PersistentWrapper from \"./Worker/PersistentWrapper.js\";\nimport Wrapper from \"./Worker/Wrapper.js\";\n\n/** Class allowing asynchronous functionality via a Worker. */\nexport default class Bifur {\n    /**\n     * Run the supplied function with the supplied arguments asynchronously.\n     * @param fnc {Function} The function to be run asynchronously.\n     * @param args {Array} The arguments to pass to the function.\n     * @returns {Promise} The promise that resolves once the function has completed.\n     */\n    static run(fnc: Function, args: Array<any>): Function {\n        const worker = Builder.build(window, fnc);\n        const wrapper: Function = Wrapper.wrap(worker);\n        const result = wrapper(args);\n        return result;\n    }\n\n    /**\n     * Create a persistent worker wrapped in a class allowing the user to run \n     * a function asynchronously, and even store a state within the function.\n     * @param fnc {Function} The function to be run asynchronously.\n     * @returns {PersistentWrapper} An instance of the class PersistentWrapper.\n     */\n    static persist(fnc: Function): PersistentWrapper {\n        const worker = Builder.build(window, fnc);\n        const wrapper: PersistentWrapper = new PersistentWrapper(worker);\n        return wrapper;\n    }\n}"],"names":[],"sourceRoot":""}